@page "/CategoryManager"
@using BussinessLayer.Entities
@using BussinessLayer.ExtentionMethods
@inject ITodoService TodoService
@attribute [Authorize]



    <div class="form-group">
        <label for="formGroupExampleInput">Category Name</label>
        <input @bind="category.Name" placeholder="wirte your category name" class="form-control"  />

    </div>

    <div class="form-group">
        <label for="formGroupExampleInput">Category Color</label>
        <input type="color" @bind="category.ColorCode"  class="form-control"  />
    </div>

<button class="btn btn-primary" @onclick="AddCategory">Add Category</button>
<hr />

<table class="table table-striped table-bordered">
    <tbody>
        @if (Categories is { })
        {
            foreach (var item in Categories)
            {
        <tr>
            <td>
                @item.Name
            </td>
            <td style="background-color:@item.ColorCode">
            </td>
            <td>
                <button class="btn" >
                    <i class="oi oi-pencil"></i>

                </button>
            </td>
            <td>
                <button class="btn" @onclick="() => DeleteCategory(item)">
                    <i class="oi oi-delete text-danger"></i>

                </button>
            </td>

        </tr>
            }
        }
    </tbody>
</table>




@code {


    TodoItemCategory category = new TodoItemCategory();

    public List<TodoItemCategory> Categories = new List<TodoItemCategory>();

    protected override async Task OnInitializedAsync()
    {
        var result = await TodoService.GetCategories();
        if (result is { })
        {
            Categories.AddRange(result);

        }
    }

    void DeleteCategory(TodoItemCategory category)
    {
        Categories.Remove(category);
        TodoService.DeleteCategory(category);
    }

    async void AddCategory()
    {
        var result = await TodoService.CreateCategory(category);
        if (result is { })
        {
            Categories.Add(result);
            category = new TodoItemCategory();
        }
        StateHasChanged();
    }

}
