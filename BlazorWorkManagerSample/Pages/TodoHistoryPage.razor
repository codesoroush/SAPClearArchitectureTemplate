@page "/todohistory"
@inject ITodoService TodoService
@inject IHttpContextAccessor httpContextAccessor
@using BussinessLayer.Entities



<h4>Now Date : @DateTime.Now.ToString("yyyy/MM/dd")</h4>
    <div class="row">
        <div class="col-md-12">

            <div class="card text-white bg-dark">
                <div class="card-body">
                    Upcoming task
                </div>
            </div>
        </div>

        @foreach (var item in UndoneTodoItems)
        {
            <div class="col-md-6">
                <div class="card alert-warning">
                    <div class="card-body">
                        <h5 class="card-title">@item.Title</h5>
                        <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>
                        <p class="card-text">@item.Note</p>
                        <a href="#" class="card-link">Show Detail</a>
                        <a href="#" class="card-link">Show TodoList</a>
                    </div>
                </div>
            </div>

        }
    </div>
        <hr style="border-top:11px solid rgba(0,0,0,.1)" />

        @for (int i = 0; i < 7; i++)
        {
            var todoes = TodoItems.Where(w => w.DoneDate.Value.Date == DateTime.Now.AddDays(i * -1).Date);
<div class="row">
    <div class="col-md-12">
        <div class="card text-white bg-dark">
            <div class="card-body ">
                @DateTime.Now.AddDays(i * -1).Date.ToString("yyyy/MM/dd")
            </div>
        </div>
    </div>

    @if (todoes.Count() > 0)
    {

        @foreach (var todoItem in todoes)

        {

            <div class="col-md-6">
                <div class="card alert-success">
                    <div class="card-body">
                        <h5 class="card-title">@todoItem.Title</h5>
                        <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>
                        <p class="card-text">@todoItem.Note</p>
                        <a href="#" class="card-link">Show Detail</a>
                        <a href="#" class="card-link">Show TodoList</a>
                    </div>
                </div>
            </div>


        }

    }
    else
    {

        <div class="col-md-6">
            <div class="card bg-light">
                <div class="card-body">
                    <h5 class="card-title">Nothing to show</h5>
                
                </div>
            </div>
        </div>
    }
</div>
        }


        @code {
            public DateTime TodayDate { get; set; } = DateTime.Now;

            public string userId { get; set; }

            public List<TodoItem> TodoItems { get; set; }
            public List<TodoItem> UndoneTodoItems { get; set; }

            protected override async Task OnInitializedAsync()
            {
                userId = httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier).Value;
                TodoItems = TodoService.GetAllTodoItemsnLastDays(userId, 7);
                UndoneTodoItems = TodoService.GetUndoneTodoItemInTomorrow();
            }

        }
